#include <iostream>

using namespace std;

const string WORD_LIST[] = {"angle", "ant", "apple", "arch", "arm", "army",
"baby", "bag", "ball", "band", "basin", "basket", "bath", "bed", "bee", "bell", "berry","bird", "blade", "board", "boat", "bone", "book", "boot", "bottle", "box", "boy",
"brain", "brake", "branch", "brick", "bridge", "brush", "bucket", "bulb", "button",
"cake", "camera", "card", "cart", "carriage", "cat", "chain", "cheese", "chest",
"chin", "church", "circle", "clock", "cloud", "coat", "collar", "comb", "cord",
"cow", "cup", "curtain", "cushion",
"dog", "door", "drain", "drawer", "dress", "drop", "ear", "egg", "engine", "eye",
"face", "farm", "feather", "finger", "fish", "flag", "floor", "fly",
"foot", "fork", "fowl", "frame", "garden", "girl", "glove", "goat", "gun",
"hair", "hammer", "hand", "hat", "head", "heart", "hook", "horn", "horse",
"hospital", "house", "island", "jewel", "kettle", "key", "knee", "knife", "knot",
"leaf", "leg", "library", "line", "lip", "lock",
"map", "match", "monkey", "moon", "mouth", "muscle",
"nail", "neck", "needle", "nerve", "net", "nose", "nut",
"office", "orange", "oven", "parcel", "pen", "pencil", "picture", "pig", "pin",
"pipe", "plane", "plate", "plow", "pocket", "pot", "potato", "prison", "pump",
"rail", "rat", "receipt", "ring", "rod", "roof", "root",
"sail", "school", "scissors", "screw", "seed", "sheep", "shelf", "ship", "shirt",
"shoe", "skin", "skirt", "snake", "sock", "spade", "sponge", "spoon", "spring",
"square", "stamp", "star", "station", "stem", "stick", "stocking", "stomach",
"store", "street", "sun", "table", "tail", "thread", "throat", "thumb", "ticket",
"toe", "tongue", "tooth", "town", "train", "tray", "tree", "trousers", "umbrella",
"wall", "watch", "wheel", "whip", "whistle", "window", "wire", "wing", "worm",};
const int WORD_COUNT = sizeof(WORD_LIST) / sizeof(string);

void playHangMan();                 //choi tro choi
string chooseWord();                //tu can doan
void renderGame(string guessedWord, int badGuess);              //ve hinh
char readAGuess();              // ky tu doan
bool contains(string word, char guess);                 //kiem tra tu
string update(string guessedWord, string word, char guess);                 // cap nhap tu

int main()
{
    playHangMan();
}

void playHangMan()
{
    const int Max_Bad_Guesses = 7;
    string word = chooseWord();
    string guessedWord = string(word.size(), '-');
    int badGuessCount = 0;
    cout << badGuessCount << endl;
    do {
        renderGame(guessedWord, badGuessCount);
        char guess = readAGuess();
        if(contains(word, guess)) guessedWord = update(guessedWord, word, guess);
        else badGuessCount++;
    }
    while (badGuessCount < Max_Bad_Guesses && word != guessedWord);
    renderGame(guessedWord, badGuessCount);
    if(badGuessCount < Max_Bad_Guesses) cout << "Chuc mung ban da doan dung!" << endl;
    else cout << "Ban da het luot doan! Tu can doan la : " << word << endl; 
}


string chooseWord()
{ 
    srand(time(NULL));
    int randomIndex = rand() % WORD_COUNT;
    return WORD_LIST[randomIndex];
   
}

const string FIGURE[] = {
" ------------- \n"
" | \n"
" | \n"
" | \n"
" | \n"
" | \n"
" ----- \n",
" ------------- \n"
" | | \n"
" | \n"
" | \n"
" | \n"
" | \n"
" ----- \n",
" ------------- \n"
" |  | \n"
" |  O \n"
" | \n"
" | \n"
" | \n"
" ----- \n",
" ------------- \n"
" |  | \n"
" |  O \n"
" |  | \n"
" | \n"
" | \n"
" ----- \n",
" ------------- \n"
" |  | \n"
" |  O \n"
" | /| \n"
" | \n"
" | \n"
" ----- \n",
" ------------- \n"
" |  | \n"
" |  O \n"
" | /|\\ \n"
" | \n"
" | \n"
" ----- \n",
" ------------- \n"
" |  | \n"
" |  O \n"
" | /|\\ \n"
" | / \n"
" | \n"
" ----- \n",
" ------------- \n"
" |  | \n"
" |  O \n"
" | /|\\ \n"
" | / \\ \n"
" | \n"
" ----- \n",

};

void renderGame(string guessedWord, int badGuessCount)
{
    cout << FIGURE[badGuessCount] << endl;
    cout << guessedWord << endl;
    cout << "So lan doan sai: " << badGuessCount << endl;
}

char readAGuess()
{
    char s;
    cout << "Chu cai ban doan: ";
    cin >> s;
    return s;
}

bool contains(string word, char guess)
{
    for(int i = 0; i < word.size(); i++)
    {
        if(word[i] == guess) return true;
    }
    return false;
}

string update(string guessedWord, string word, char guess)
{
    for(int i = 0; i < word.size(); i++)
    {
        if(word[i] == guess) guessedWord[i] = guess;
    }
    return guessedWord;
}
